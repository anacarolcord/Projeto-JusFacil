// <auto-generated />
using System;
using JusFacil.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JusFacil.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250718152417_adcrelacionamentoprocessodoc")]
    partial class adcrelacionamentoprocessodoc
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("JusFacil.API.Models.Atendimento", b =>
                {
                    b.Property<int>("AtendimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProcessoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AtendimentoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProcessoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Atendimentos");
                });

            modelBuilder.Entity("JusFacil.API.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("JusFacil.API.Models.Documento", b =>
                {
                    b.Property<int>("DocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtendimentoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CaminhoArquivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProcessoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoArquivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DocumentoId");

                    b.HasIndex("AtendimentoId");

                    b.HasIndex("ProcessoId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("JusFacil.API.Models.Financeiro", b =>
                {
                    b.Property<int>("FinanceiroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("TEXT");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProcessoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatusPagamento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("TEXT");

                    b.HasKey("FinanceiroId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProcessoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Financeiros");
                });

            modelBuilder.Entity("JusFacil.API.Models.Processo", b =>
                {
                    b.Property<int>("ProcessoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroProcesso")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProcessoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Processos");
                });

            modelBuilder.Entity("JusFacil.API.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("JusFacil.API.Models.Atendimento", b =>
                {
                    b.HasOne("JusFacil.API.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JusFacil.API.Models.Processo", "Processo")
                        .WithMany()
                        .HasForeignKey("ProcessoId");

                    b.HasOne("JusFacil.API.Models.Usuario", "Usuario")
                        .WithMany("Atendimentos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Processo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("JusFacil.API.Models.Cliente", b =>
                {
                    b.HasOne("JusFacil.API.Models.Usuario", "Usuario")
                        .WithMany("Clientes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("JusFacil.API.Models.Documento", b =>
                {
                    b.HasOne("JusFacil.API.Models.Atendimento", "Atendimento")
                        .WithMany("Documentos")
                        .HasForeignKey("AtendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JusFacil.API.Models.Processo", "Processo")
                        .WithMany("Documentos")
                        .HasForeignKey("ProcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atendimento");

                    b.Navigation("Processo");
                });

            modelBuilder.Entity("JusFacil.API.Models.Financeiro", b =>
                {
                    b.HasOne("JusFacil.API.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JusFacil.API.Models.Processo", "Processo")
                        .WithMany()
                        .HasForeignKey("ProcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JusFacil.API.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Processo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("JusFacil.API.Models.Processo", b =>
                {
                    b.HasOne("JusFacil.API.Models.Cliente", "Cliente")
                        .WithMany("Processos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JusFacil.API.Models.Usuario", "Usuario")
                        .WithMany("Processos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("JusFacil.API.Models.Atendimento", b =>
                {
                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("JusFacil.API.Models.Cliente", b =>
                {
                    b.Navigation("Processos");
                });

            modelBuilder.Entity("JusFacil.API.Models.Processo", b =>
                {
                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("JusFacil.API.Models.Usuario", b =>
                {
                    b.Navigation("Atendimentos");

                    b.Navigation("Clientes");

                    b.Navigation("Processos");
                });
#pragma warning restore 612, 618
        }
    }
}
